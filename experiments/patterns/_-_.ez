## Summator

input (_name _a _b) = output (sum _a _b)

0 = zero
1 = next 0
2 = next 1
3 = next 2
4 = next 3
5 = next 4

nat zero = true
nat (next _) = nat (_)

(next _) > zero = true
(next _a) > (next _b) = (_a) > (_b)

2 > 5
# (next 1) > (next 4)
# 1 > 4
# (next 0) > (next 3)
# 0 > 3
# zero > (next 2)
# -- Error: can't find a matching pattern

sum zero zero = zero
sum (next _) zero = (next _)
sum (next _a) (next _b) = sum (next (next _a)) (_b)

## Prove that length of concatenation of two lists is equal to sum of lengths of lists

length () = zero
length (_first ...rest) = next (length (...rest))

concat _ () = _
concat () _ = _
concat (...list1) (_first2 ...rest2) = concat (...list1 _first2) (...rest2)

length (concat _list1 _list2) ~ sum (length _list1) (length _list2)
# 1: concat _ () = _
# 1: length (concat _list1 ()) ~ sum (length _list1) (length ())
# 1: length (_list1) ~ sum (length _list1) (zero)
# 1: length (_list1) ~ sum (length _list1) (zero)

# -- Error: multiple candidates for _list1, _list2

length (concat _list1 ()) = length (_list1)
sum (length _list1) (length ()) = sum (length _list1) (0) = length (_list1)

length (concat () _list2) = length (_list2)

## Database of students
# - main module -
import basic (input output)
import postgresql (connect select insert update)

input addStudent _name = insert db students (_name)

input removeStudent _name = remove db students ((name _name))

db = connect (
    host localhost
    port 5432
    dbname school
    password PaSSwOrd123$!
)

# - db module -
# insert is a built-in function provided by driver (input: tree of strings, output: tree of strings describing effects)
